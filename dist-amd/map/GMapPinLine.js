!function(o,t){"function"==typeof define&&define.amd?define(["d3","./GMapLayered","./Lines","./Pins"],t):o.map_GMapPinLine=t(o.d3,o.map_GMapLayered,o.map_Lines,o.map_Pins)}(this,function(o,t,i,n){function e(o){t.call(this);var e=this;this._lines=new i,this._pins=(new n).columns(["lat","long","ext"]).on("click",function(o,t,i){e.click(e.rowToObj(o.ext.origRow),"",i)}).on("dblclick",function(o,t,i){e.click(e.rowToObj(o.ext.origRow),"",i)})}return e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.prototype._class+=" map_GMapPinLine",e.prototype.publish("autoScale",!1,"boolean","Auto scale to data"),e.prototype.publish("fromPinColor","green","color","From Pin Color"),e.prototype.publish("fromLatitudeColumn",null,"set","From Latitude",function(){return this.columns()},{optional:!0}),e.prototype.publish("fromLongtitudeColumn",null,"set","From Longtitude",function(){return this.columns()},{optional:!0}),e.prototype.publish("fromColorColumn",null,"set","From Color",function(){return this.columns()},{optional:!0}),e.prototype.publish("fromTooltipColumn",null,"set","From Tooltip",function(){return this.columns()},{optional:!0}),e.prototype.publish("toPinColor","red","color","To Pin Color"),e.prototype.publish("toLatitudeColumn",null,"set","To Latitude",function(){return this.columns()},{optional:!0}),e.prototype.publish("toLongtitudeColumn",null,"set","To Longtitude",function(){return this.columns()},{optional:!0}),e.prototype.publish("toColorColumn",null,"set","To Color",function(){return this.columns()},{optional:!0}),e.prototype.publish("toTooltipColumn",null,"set","To Tooltip",function(){return this.columns()},{optional:!0}),e.prototype.pinsData=function(){var o=this.columns();this._fromView=this._db.rollupView([this.fromLatitudeColumn(),this.fromLongtitudeColumn()]),this._toView=this._db.rollupView([this.toLatitudeColumn(),this.toLongtitudeColumn()]);var t=this._fromView.entries().map(function(t){var i=t.values[0].values[0];return[t.key,t.values[0].key,{fillColor:i[o.indexOf(this.fromColorColumn())]||this.fromPinColor(),tooltip:i[o.indexOf(this.fromTooltipColumn())],origRow:i}]},this),i=this._toView.entries().map(function(t){var i=t.values[0].values[0];return[t.key,t.values[0].key,{fillColor:i[o.indexOf(this.toColorColumn())]||this.toPinColor(),tooltip:i[o.indexOf(this.toTooltipColumn())],origRow:i}]},this);return t.concat(i)},e.prototype.linesData=function(){return this._linesView=this._db.rollupView([this.fromLatitudeColumn(),this.fromLongtitudeColumn(),this.toLatitudeColumn(),this.toLongtitudeColumn()]),this._linesView.data()},e.prototype.enter=function(o,i){t.prototype.enter.apply(this,arguments),this.layers([this._lines,this._pins])},e.prototype.update=function(o,i){t.prototype.update.apply(this,arguments),this._pins.data(this.pinsData()),this._lines.data(this.linesData()),this.autoScale()&&this._prevChecksum!==this._db.checksum()&&(this._prevChecksum=this._db.checksum(),this.zoomTo(this._pins.pinsData().map(function(o){return[o.lat,o["long"]]})))},e.prototype.exit=function(o,i){t.prototype.exit.apply(this,arguments)},e.prototype.click=function(o,t,i){console.log("Click:  "+JSON.stringify(o)+", "+t+","+i)},e.prototype.dblclick=function(o,t,i){console.log("Double click:  "+JSON.stringify(o)+", "+t+","+i)},e});